{"version":3,"sources":["components/Header.jsx","utils/db.js","components/TodoForm.jsx","components/TodoItem.jsx","components/TodoItemList.jsx","components/TodoBox.jsx","components/Footer.jsx","App.jsx","index.js"],"names":["Header","Navbar","expend","Brand","src","process","width","height","alt","DB","dbName","this","db","Dexie","version","stores","todoList","a","toArray","value","add","id","key","update","delete","TodoForm","props","setTodoList","useState","todoText","setTodoText","addTodo","newTodoList","newTodo","text","done","created_at","Date","push","InputGroup","onKeyPress","e","length","FormControl","type","placeholder","onChange","target","Append","Button","variant","disabled","onClick","icon","faPlus","TodoItem","todo","index","editTodoText","setEditTodoText","edit","setEdit","updateTodo","find","splice","ListGroup","Item","className","checked","defaultValue","OverlayTrigger","placement","transition","overlay","Tooltip","ref","triggerHandler","faEdit","color","faTrash","TodoList","React","memo","map","TodoBox","initTodoList","get","indexedTodoList","useEffect","Card","Body","TodoItemList","filter","Footer","href","rel","faExternalLinkAlt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e21387eb.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nconst Header = () => {\n  return (\n    <Navbar expend=\"md\">\n      <Navbar.Brand>\n        <img src={`${process.env.PUBLIC_URL}/Logo.png`} width=\"20\" height=\"20\" alt=\"logo\" />{' '}\n        To-Do\n      </Navbar.Brand>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import Dexie from 'dexie';\n\nexport default class DB {\n\n  constructor(dbName) {\n    this.db = new Dexie(dbName);\n    this.db.version(1).stores({\n      todoList: '++id, text, done, created_at',\n    });\n  }\n\n  async get() {\n    // eslint-disable-next-line no-return-await\n    return await this.db.todoList.toArray();\n  }\n\n  async add(value) {\n    await this.db.todoList.add(value);\n  }\n\n  update(id, key, value) {\n    this.db.todoList.update(id, { [key]: value });\n  }\n\n  delete(id) {\n    this.db.todoList.delete(id);\n  }\n\n}\n","import { React, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport DB from '../utils/db';\n\nconst TodoForm = (props) => {\n\n  const { todoList, setTodoList } = props;\n\n  const [todoText, setTodoText] = useState('');\n\n  const db = new DB('todoList');\n\n  const inputTodoTextHandler = (event) => {\n    setTodoText(event.target.value);\n  };\n\n  const addTodo = async() => {\n    const newTodoList = [...todoList];\n    const newTodo = {\n      text: todoText,\n      done: false,\n      created_at: new Date(),\n    };\n    newTodoList.push(newTodo);\n    setTodoList(newTodoList);\n    setTodoText('');\n    await db.add(newTodo);\n  };\n\n  const enterButtonPressedHandler = (event) => {\n    if (event.key === 'Enter' && todoText.length > 0) {\n      addTodo();\n    }\n  };\n\n  return (\n    <InputGroup onKeyPress={(e) => { enterButtonPressedHandler(e) }}>\n      <FormControl\n        type=\"text\"\n        placeholder=\"What needs to be done?\"\n        value={todoText}\n        onChange={e => inputTodoTextHandler(e)}\n      />\n      <InputGroup.Append>\n        <Button variant=\"primary\" disabled={todoText.length === 0} onClick={addTodo}>\n          <FontAwesomeIcon icon={faPlus} />\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n};\n\nTodoForm.propTypes = {\n  todoList: PropTypes.array.isRequired,\n  setTodoList: PropTypes.func.isRequired,\n};\n\nexport default TodoForm;\n","import { React, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ListGroup, InputGroup, FormControl, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport DB from '../utils/db';\n\nconst TodoItem = (props) => {\n  const { todo, index, todoList, setTodoList } = props;\n\n  const [editTodoText, setEditTodoText] = useState(todo.text);\n  const [edit, setEdit] = useState(false);\n\n  const newTodoList = [...todoList];\n\n  const db = new DB('todoList');\n\n  const deleteTodo = () => {\n    newTodoList.splice(index, 1);\n    setTodoList(newTodoList);\n    db.delete(todo.id);\n  };\n\n  const updateTodo = (key, value) => {\n    const newTodo = newTodoList.find(newTodo => newTodo.id === todo.id);\n    newTodo[key] = value;\n    newTodoList.splice(index, 1, newTodo);\n    setTodoList(newTodoList);\n    db.update(todo.id, key, value);\n  };\n\n  const inputEditTodoTextHandler = (event) => {\n    setEditTodoText(event.target.value);\n  };\n\n  const onEditButtonPushed = () => {\n    if (edit) {\n      updateTodo('text', editTodoText);\n      setEdit(false);\n    }\n    else {\n      setEdit(true);\n    }\n  };\n\n  return (\n    <ListGroup.Item variant={todo.done && 'success'}>\n      <InputGroup className=\"align-items-center\">\n        <input\n          id={index}\n          className=\"mr-2\"\n          type=\"checkbox\"\n          checked={todo.done}\n          onChange={() => updateTodo('done', !todo.done)}\n        />\n\n        {edit && (\n          <FormControl\n            className=\"mr-2\"\n            defaultValue={editTodoText}\n            onChange={(e) => { inputEditTodoTextHandler(e) }}\n          />\n        )}\n\n        {(todo.done && !edit) && (\n          <strike>{todo.text}</strike>\n        )}\n        {(!todo.done && !edit) && (\n          <>{todo.text}</>\n        )}\n\n        <div className=\"ml-auto\">\n          <OverlayTrigger placement=\"top\" transition={false} overlay={<Tooltip id=\"Tooltip\">Edit Todo</Tooltip>}>\n            {({ ref, ...triggerHandler }) => (\n              <button ref={ref} {...triggerHandler} type=\"button\" className=\"item-update-btn\" onClick={() => onEditButtonPushed()}>\n                <FontAwesomeIcon icon={faEdit} color=\"#cccccc\" />\n              </button>\n            )}\n          </OverlayTrigger>\n          <OverlayTrigger placement=\"top\" transition={false} overlay={<Tooltip id=\"Tooltip\">Delete Todo</Tooltip>}>\n            {({ ref, ...triggerHandler }) => (\n              <button ref={ref} {...triggerHandler} type=\"button\" className=\"item-update-btn\" onClick={() => deleteTodo()}>\n                <FontAwesomeIcon icon={faTrash} color=\"#cccccc\" />\n              </button>\n            )}\n          </OverlayTrigger>\n        </div>\n      </InputGroup>\n    </ListGroup.Item>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  todoList: PropTypes.array.isRequired,\n  setTodoList: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListGroup } from 'react-bootstrap';\nimport TodoItem from './TodoItem';\n\nconst TodoList = React.memo((props) => {\n  const { todoList, setTodoList } = props;\n\n  return (\n    <ListGroup className={todoList.length === 0 ? true : 'mt-3'}>\n      {todoList.map((todo, index) => {\n        return (\n          <TodoItem\n            key={todo.id + todo.text}\n            todo={todo}\n            index={index}\n            todoList={todoList}\n            setTodoList={setTodoList}\n          />\n        );\n      })}\n    </ListGroup>\n  );\n});\n\nTodoList.propTypes = {\n  todoList: PropTypes.array.isRequired,\n  setTodoList: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import { React, useState, useEffect } from 'react';\nimport { Card } from 'react-bootstrap';\nimport TodoForm from './TodoForm';\nimport TodoItemList from './TodoItemList';\nimport DB from '../utils/db';\n\nconst TodoBox = () => {\n  const [todoList, setTodoList] = useState([]);\n\n  const db = new DB('todoList');\n\n  const initTodoList = async() => {\n    const indexedTodoList = await db.get();\n    setTodoList(indexedTodoList);\n  };\n\n  useEffect(() => {\n    initTodoList();\n  }, []);\n\n  return (\n    <Card className=\"mx-3 mt-3\">\n      <Card.Body>\n        <TodoForm\n          todoList={todoList}\n          setTodoList={setTodoList}\n        />\n\n        <TodoItemList\n          todoList={todoList}\n          setTodoList={setTodoList}\n        />\n\n        {todoList.length === 0 && (\n          <div className=\"mt-3 text-center\">\n            <small className=\"text-secondary\">There is no todo.</small>\n          </div>\n        )}\n\n        {todoList.length > 0 && todoList.filter((todo) => { return !todo.done }).length === 0 && (\n          <div className=\"mt-3 text-center\">\n            <small className=\"text-secondary\">There are no unfinished todo&apos;s.</small>\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TodoBox;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer my-2\">\n      <small>\n        <a className=\"text-secondary\" href=\"https://github.com/miya/to-do\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\n        <FontAwesomeIcon className=\"text-secondary extra-link-icon mb-1 ml-1 mr-3\" icon={faExternalLinkAlt} />\n      </small>\n      <small className=\"text-secondary\">Copyright (C) 2021 to-do</small>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './components/Header';\nimport TodoBox from './components/TodoBox';\nimport Footer from './components/Footer';\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <TodoBox />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}