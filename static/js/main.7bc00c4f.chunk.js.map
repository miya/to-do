{"version":3,"sources":["components/Header.jsx","utils/db.js","components/TodoForm.jsx","components/TodoItem.jsx","components/TodoItemList.jsx","components/TodoBox.jsx","components/Footer.jsx","App.js","index.js"],"names":["Header","Navbar","expend","Brand","src","process","width","height","alt","db","Dexie","version","stores","todoList","TodoForm","props","setTodoList","useState","todoText","setTodoText","addTodo","a","newTodoList","newTodo","text","done","created_at","Date","push","add","InputGroup","FormControl","type","placeholder","value","onChange","e","target","Append","Button","variant","disabled","onClick","icon","faPlus","TodoItem","todo","index","editTodoText","setEditTodoText","edit","setEdit","onEditButtonPushed","splice","id","update","updateTodoText","ListGroup","Item","className","checked","updateTodoDone","defaultValue","OverlayTrigger","placement","transition","overlay","Tooltip","ref","triggerHandler","faEdit","color","delete","deleteTodo","faTrash","TodoList","React","memo","length","map","TodoBox","initTodoList","toArray","indexedTodoList","useEffect","Card","Body","TodoItemList","filter","Footer","href","rel","faExternalLinkAlt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bc00c4f.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nconst Header = () => {\n  return (\n    <Navbar expend=\"md\">\n      <Navbar.Brand>\n        <img src={`${process.env.PUBLIC_URL}/Logo.png`} width=\"20\" height=\"20\" alt=\"logo\" />{' '}\n        To-Do\n      </Navbar.Brand>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import Dexie from 'dexie';\n\nconst dbName = 'todoList';\nconst dbVersion = 1;\n\nconst db = new Dexie(dbName);\n\ndb.version(dbVersion).stores({\n  todoList: '++id, text, done, created_at',\n});\n\nexport default db;\n","import { React, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport db from '../utils/db';\n\nconst TodoForm = (props) => {\n\n  const { todoList, setTodoList } = props;\n\n  const [todoText, setTodoText] = useState('');\n\n  const inputTodoTextHandler = (event) => {\n    setTodoText(event.target.value);\n  };\n\n  const addTodo = async() => {\n    const newTodoList = [...todoList];\n    const newTodo = {\n      text: todoText,\n      done: false,\n      created_at: new Date(),\n    };\n    newTodoList.push(newTodo);\n    setTodoList(newTodoList);\n    setTodoText('');\n    await db.todoList.add(newTodo);\n  };\n\n  return (\n    <InputGroup>\n      <FormControl\n        type=\"text\"\n        placeholder=\"What needs to be done?\"\n        value={todoText}\n        onChange={e => inputTodoTextHandler(e)}\n      />\n      <InputGroup.Append>\n        <Button variant=\"primary\" disabled={!todoText} onClick={addTodo}>\n          <FontAwesomeIcon icon={faPlus} />\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n};\n\nTodoForm.propTypes = {\n  todoList: PropTypes.array.isRequired,\n  setTodoList: PropTypes.func.isRequired,\n};\n\nexport default TodoForm;\n","import { React, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ListGroup, InputGroup, FormControl, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport db from '../utils/db';\n\nconst TodoItem = (props) => {\n  const { todo, index, todoList, setTodoList } = props;\n\n  const [editTodoText, setEditTodoText] = useState(todo.text);\n  const [edit, setEdit] = useState(false);\n\n  const deleteTodo = () => {\n    const newTodoList = [...todoList];\n    newTodoList.splice(index, 1);\n    setTodoList(newTodoList);\n    db.todoList.delete(todo.id);\n  };\n\n  const updateTodoDone = () => {\n    const newTodoList = [...todoList];\n    newTodoList.splice(index, 1, {\n      id: todo.id,\n      text: todo.text,\n      done: !todo.done,\n      created_at: todo.created_at,\n    });\n    setTodoList(newTodoList);\n    db.todoList.update(todo.id, { done: !todo.done });\n  };\n\n  const updateTodoText = () => {\n    const newTodoList = [...todoList];\n    newTodoList.splice(index, 1, {\n      id: todo.id,\n      text: editTodoText,\n      done: todo.done,\n      created_at: todo.created_at,\n    });\n    setTodoList(newTodoList);\n    db.todoList.update(todo.id, { text: editTodoText });\n  };\n\n  const inputEditTodoTextHandler = (event) => {\n    setEditTodoText(event.target.value);\n  };\n\n  const onEditButtonPushed = () => {\n    if (edit) {\n      updateTodoText();\n      setEdit(false);\n    }\n    else {\n      setEdit(true);\n    }\n  };\n\n  return (\n    <ListGroup.Item variant={todo.done && 'success'}>\n      <InputGroup className=\"align-items-center\">\n        <input\n          id={index}\n          className=\"mr-2\"\n          type=\"checkbox\"\n          checked={todo.done}\n          onChange={() => updateTodoDone()}\n        />\n\n        {edit && (\n          <FormControl\n            className=\"mr-2\"\n            defaultValue={editTodoText}\n            onChange={(e) => { inputEditTodoTextHandler(e) }}\n          />\n        )}\n\n        {(todo.done && !edit) && (\n          <strike>{todo.text}</strike>\n        )}\n        {(!todo.done && !edit) && (\n          <>{todo.text}</>\n        )}\n\n        <div className=\"ml-auto\">\n          <OverlayTrigger placement=\"top\" transition={false} overlay={<Tooltip id=\"Tooltip\">Edit Todo</Tooltip>}>\n            {({ ref, ...triggerHandler }) => (\n              <button ref={ref} {...triggerHandler} type=\"button\" className=\"item-update-btn\" onClick={() => onEditButtonPushed()}>\n                <FontAwesomeIcon icon={faEdit} color=\"#cccccc\" />\n              </button>\n            )}\n          </OverlayTrigger>\n          <OverlayTrigger placement=\"top\" transition={false} overlay={<Tooltip id=\"Tooltip\">Delete Todo</Tooltip>}>\n            {({ ref, ...triggerHandler }) => (\n              <button ref={ref} {...triggerHandler} type=\"button\" className=\"item-update-btn\" onClick={() => deleteTodo()}>\n                <FontAwesomeIcon icon={faTrash} color=\"#cccccc\" />\n              </button>\n            )}\n          </OverlayTrigger>\n        </div>\n      </InputGroup>\n    </ListGroup.Item>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  todoList: PropTypes.array.isRequired,\n  setTodoList: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListGroup } from 'react-bootstrap';\nimport TodoItem from './TodoItem';\n\nconst TodoList = React.memo((props) => {\n  const { todoList, setTodoList } = props;\n\n  return (\n    <ListGroup className={todoList.length === 0 ? true : 'mt-3'}>\n      {todoList.map((todo, index) => {\n        return (\n          <TodoItem\n            key={todo.id + todo.text}\n            todo={todo}\n            index={index}\n            todoList={todoList}\n            setTodoList={setTodoList}\n          />\n        );\n      })}\n    </ListGroup>\n  );\n});\n\nTodoList.propTypes = {\n  todoList: PropTypes.array.isRequired,\n  setTodoList: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import { React, useState, useEffect } from 'react';\nimport { Card } from 'react-bootstrap';\nimport TodoForm from './TodoForm';\nimport TodoItemList from './TodoItemList';\nimport db from '../utils/db';\n\nconst TodoBox = () => {\n  const [todoList, setTodoList] = useState([]);\n\n  const initTodoList = async() => {\n    const indexedTodoList = await db.todoList.toArray();\n    setTodoList(indexedTodoList);\n  };\n\n  useEffect(() => {\n    initTodoList();\n  }, []);\n\n  return (\n    <Card className=\"mx-3 mt-3\">\n      <Card.Body>\n        <TodoForm\n          todoList={todoList}\n          setTodoList={setTodoList}\n        />\n\n        <TodoItemList\n          todoList={todoList}\n          setTodoList={setTodoList}\n        />\n\n        {todoList.length === 0 && (\n          <div className=\"mt-3 text-center\">\n            <small className=\"text-secondary\">There is no todo.</small>\n          </div>\n        )}\n\n        {todoList.length > 0 && todoList.filter((todo) => { return !todo.done }).length === 0 && (\n          <div className=\"mt-3 text-center\">\n            <small className=\"text-secondary\">There are no unfinished todo&apos;s.</small>\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TodoBox;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer my-2\">\n      <small>\n        <a className=\"text-secondary\" href=\"https://github.com/miya/to-do\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\n        <FontAwesomeIcon className=\"text-secondary extra-link-icon mb-1 ml-1 mr-3\" icon={faExternalLinkAlt} />\n      </small>\n      <small className=\"text-secondary\">Copyright (C) 2021 to-do</small>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import Header from './components/Header';\nimport TodoBox from './components/TodoBox';\nimport Footer from './components/Footer';\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <TodoBox />\n      <Footer />\n    </>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}